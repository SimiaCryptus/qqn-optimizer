warning: use of deprecated function `rand::thread_rng`: Renamed to `rng`
  --> src/benchmarks/ml_problems.rs:23:29
   |
23 |         let mut rng = rand::thread_rng();
   |                             ^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default

warning: use of deprecated function `rand::thread_rng`: Renamed to `rng`
   --> src/benchmarks/ml_problems.rs:129:29
    |
129 |         let mut rng = rand::thread_rng();
    |                             ^^^^^^^^^^

warning: use of deprecated function `rand::thread_rng`: Renamed to `rng`
   --> src/benchmarks/ml_problems.rs:253:29
    |
253 |         let mut rng = rand::thread_rng();
    |                             ^^^^^^^^^^

warning: use of deprecated method `rand::Rng::gen_range`: Renamed to `random_range`
  --> src/benchmarks/ml_problems.rs:29:59
   |
29 |             let x: Vec<f64> = (0..n_features).map(|_| rng.gen_range(-1.0..1.0)).collect();
   |                                                           ^^^^^^^^^

warning: use of deprecated method `rand::Rng::gen_range`: Renamed to `random_range`
   --> src/benchmarks/ml_problems.rs:139:59
    |
139 |             let x: Vec<f64> = (0..input_size).map(|_| rng.gen_range(-1.0..1.0)).collect();
    |                                                           ^^^^^^^^^

warning: use of deprecated method `rand::Rng::gen_range`: Renamed to `random_range`
   --> src/benchmarks/ml_problems.rs:141:29
    |
141 |             let class = rng.gen_range(0..output_size);
    |                             ^^^^^^^^^

warning: use of deprecated method `rand::Rng::gen_range`: Renamed to `random_range`
   --> src/benchmarks/ml_problems.rs:255:26
    |
255 |             .map(|_| rng.gen_range(-0.1..0.1))
    |                          ^^^^^^^^^

warning: unused variable: `problem_name`
   --> src/analysis/plotting.rs:265:18
    |
265 |         for (i, (problem_name, optimizer_data)) in chart_data.iter().enumerate() {
    |                  ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_problem_name`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: field `config` is never read
 --> src/analysis/reporting.rs:8:5
  |
7 | pub struct ReportGenerator {
  |            --------------- field in this struct
8 |     config: ReportConfig,
  |     ^^^^^^
  |
  = note: `#[warn(dead_code)]` on by default

warning: `qqn-optimizer` (lib) generated 9 warnings
warning: `qqn-optimizer` (lib test) generated 9 warnings (9 duplicates)
warning: unused import: `PerformanceProfiles`
 --> tests/benchmark_experiments.rs:4:64
  |
4 | use qqn_optimizer::analysis::statistics::{StatisticalAnalysis, PerformanceProfiles};
  |                                                                ^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `AckleyFunction` and `RastriginFunction`
 --> tests/benchmark_experiments.rs:7:5
  |
7 |     AckleyFunction, BealeFunction, OptimizationProblem, RastriginFunction, RosenbrockFunction,
  |     ^^^^^^^^^^^^^^                                      ^^^^^^^^^^^^^^^^^

warning: unused import: `tempfile::tempdir`
  --> tests/benchmark_experiments.rs:18:5
   |
18 | use tempfile::tempdir;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `Optimizer`
  --> tests/benchmark_experiments.rs:11:62
   |
11 | use qqn_optimizer::core::optimizer::{DifferentiableFunction, Optimizer, OptimizerBox};
   |                                                              ^^^^^^^^^

warning: unused variable: `opt_name`
   --> tests/benchmark_experiments.rs:833:14
    |
833 |         for (opt_name, optimizer) in &optimizers {
    |              ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_opt_name`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: struct `BenchmarkFunctionWrapper` is never constructed
  --> tests/benchmark_experiments.rs:21:8
   |
21 | struct BenchmarkFunctionWrapper<T: OptimizationProblem> {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: associated function `new` is never used
  --> tests/benchmark_experiments.rs:26:8
   |
25 | impl<T: OptimizationProblem> BenchmarkFunctionWrapper<T> {
   | -------------------------------------------------------- associated function in this implementation
26 |     fn new(problem: T) -> Self {
   |        ^^^

warning: function `tensor_from_vec` is never used
  --> tests/benchmark_experiments.rs:49:4
   |
49 | fn tensor_from_vec(values: Vec<f64>) -> Tensor {
   |    ^^^^^^^^^^^^^^^

warning: function `tensors_to_vec` is never used
  --> tests/benchmark_experiments.rs:53:4
   |
53 | fn tensors_to_vec(tensors: &[Tensor]) -> Vec<f64> {
   |    ^^^^^^^^^^^^^^

   Compiling qqn-optimizer v0.1.0 (/home/andrew/code/qqn-optimizer)
warning: `qqn-optimizer` (test "benchmark_experiments") generated 9 warnings (run `cargo fix --test "benchmark_experiments"` to apply 3 suggestions)
warning: unused import: `PerformanceProfiles`
 --> tests/performance_analysis.rs:1:64
  |
1 | use qqn_optimizer::analysis::statistics::{StatisticalAnalysis, PerformanceProfiles};
  |                                                                ^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::path::Path`
 --> tests/performance_analysis.rs:6:5
  |
6 | use std::path::Path;
  |     ^^^^^^^^^^^^^^^

error[E0716]: temporary value dropped while borrowed
   --> tests/performance_analysis.rs:152:45
    |
152 |     let output_path = std::path::Path::new(&format!("academic_exports_{}", timestamp));
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ - temporary value is freed at the end of this statement
    |                                             |
    |                                             creates a temporary value which is freed while still in use
153 |     std::fs::create_dir_all(output_path)?;
    |                             ----------- borrow later used here
    |
    = note: consider using a `let` binding to create a longer lived value
    = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

For more information about this error, try `rustc --explain E0716`.
warning: `qqn-optimizer` (test "performance_analysis") generated 2 warnings
error: could not compile `qqn-optimizer` (test "performance_analysis") due to 1 previous error; 2 warnings emitted
